// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func OrderEntryPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html><head><title>Order Entry</title><link rel=\"stylesheet\" href=\"assets/styles/styles.css\"><script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script><!-- Include jQuery --></head><body><header><h1>Order Entry Form</h1></header><div class=\"container\"><main style=\"display: flex; gap: 20px;\"><section><form action=\"/purchase\" method=\"POST\" id=\"orderEntryForm\"><fieldset><legend>Personal Info</legend> <label for=\"firstName\">First Name*</label> <input type=\"text\" id=\"firstName\" name=\"firstName\" required onkeyup=\"showCustomerSuggestions(this.value, &#39;first&#39;)\"> <label for=\"lastName\">Last Name*</label> <input type=\"text\" id=\"lastName\" name=\"lastName\" required onkeyup=\"showCustomerSuggestions(this.value, &#39;last&#39;)\"> <label for=\"email\">Email*</label> <input type=\"email\" id=\"email\" name=\"email\" required></fieldset><fieldset><legend>Product Info</legend> <label for=\"product\">Select a product*</label> <select id=\"product\" name=\"product\" required onchange=\"showQuantity()\"><option value=\"\" disabled selected>-- What can your wallet handle? --</option> <option value=\"Family Friendly\">Family Friendly</option> <option value=\"Pure Sport\">Pure Sport</option> <option value=\"Budget Pick\">Budget Pick</option></select> <label for=\"available\">Available:</label> <input type=\"text\" id=\"available\" readonly> <label for=\"quantity\">Quantity*</label> <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" max=\"1000\" required></fieldset><button type=\"submit\">Purchase</button> <button type=\"reset\" style=\"background-color: red; color: white;\">Clear Fields</button></form></section><aside><h3>Choose an existing customer:</h3><table border=\"1\" id=\"customerTable\"><thead><tr><th>First Name</th><th>Last Name</th><th>Email</th></tr></thead> <tbody id=\"customerTableBody\"><!-- Customer suggestions will be populated here --></tbody></table></aside></main><div id=\"orderConfirmation\"></div><!-- Element to display confirmation message --></div><script>\r\n            function showQuantity() {\r\n                var product = document.getElementById('product').value;\r\n                var xmlhttp = new XMLHttpRequest();\r\n                xmlhttp.onreadystatechange = function() {\r\n                    if (this.readyState == 4 && this.status == 200) {\r\n                        document.getElementById(\"available\").value = this.responseText;\r\n                    }\r\n                };\r\n                xmlhttp.open(\"GET\", \"/get_product_quantity?product=\" + encodeURIComponent(product), true);\r\n                xmlhttp.send();\r\n            }\r\n\r\n            function showCustomerSuggestions(query, field) {\r\n                if (query.trim().length === 0) {\r\n                    document.getElementById(\"customerTableBody\").innerHTML = \"\";\r\n                    return;\r\n                }\r\n\r\n            var xmlhttp = new XMLHttpRequest();\r\n            xmlhttp.onreadystatechange = function() {\r\n                if (this.readyState === 4 && this.status === 200) {\r\n                    document.getElementById(\"customerTableBody\").innerHTML = this.responseText;\r\n                }\r\n            };\r\n            xmlhttp.open(\"GET\", \"/get_customers?name=\" + encodeURIComponent(query) + \"&field=\" + encodeURIComponent(field), true);\r\n            xmlhttp.send();\r\n        }\r\n\r\n            document.getElementById(\"customerTable\").addEventListener(\"click\", function(e) {\r\n                if (e.target && e.target.nodeName === \"TD\") {\r\n                    var row = e.target.parentNode;\r\n                    document.getElementById(\"firstName\").value = row.cells[0].innerText;\r\n                    document.getElementById(\"lastName\").value = row.cells[1].innerText;\r\n                    document.getElementById(\"email\").value = row.cells[2].innerText;\r\n                }\r\n            });\r\n\r\n            // jQuery for AJAX form submission\r\n            $(document).ready(function() {\r\n                $(\"#orderEntryForm\").submit(function(e) {\r\n                    e.preventDefault(); // Prevent default form submission\r\n\r\n                    $.ajax({\r\n                        type: \"POST\",\r\n                        url: \"/purchase\",\r\n                        data: $(this).serialize(), // Serialize form data\r\n                        success: function(response) {\r\n                            $(\"#orderConfirmation\").html(response); // Display the confirmation message\r\n                            $(\"#customerTableBody\").html(\"\"); // Clear the customer table\r\n                            $(\"#orderEntryForm\")[0].reset(); // Clear the form fields\r\n                        },\r\n                        error: function() {\r\n                            alert(\"Error submitting the form. Please try again.\");\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
